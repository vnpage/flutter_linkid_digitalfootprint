// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 effective-4.1.50 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 4 -enforce-exclusivity=checked -O -module-name LinkIdDigitalFootprint
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreLocation
import CoreTelephony
import DeviceCheck
import Foundation
@_exported import LinkIdDigitalFootprint
import Network
import NetworkExtension
import SpeedcheckerSDK
import Swift
import WebKit
import _Concurrency
import _StringProcessing
public enum Network : Swift.String {
  case wifi
  case cellular
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers @objcMembers public class DigitalFootprint {
  @objc public static func initSevice(tenantId: Swift.String, apiKey: Swift.String, url: Swift.String)
  @objc public static func stopService()
  @objc public static func logEvent(_ eventName: Swift.String, data: [Swift.String : Any]?)
  @objc public static func startScreenFlow(_ screenName: Swift.String)
  @objc public static func endScreenFlow(_ screenName: Swift.String, data: [Swift.String : Any]?)
  @objc public static func setCurrentScreen(_ screenName: Swift.String, data: [Swift.String : Any]?)
  @objc public static func registerTextField(_ textField: UIKit.UITextField, name: Swift.String, delegate: (any UIKit.UITextFieldDelegate)?)
  @objc public static func registerTextField(_ textField: UIKit.UITextField, name: Swift.String)
  @objc public class func setShowLog(_ showLog: Swift.Bool)
  @objc public class func saveInputEvent(_ eventData: [Swift.String : Any])
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Logger {
  @objc deinit
}
extension LinkIdDigitalFootprint.Network : Swift.Equatable {}
extension LinkIdDigitalFootprint.Network : Swift.Hashable {}
extension LinkIdDigitalFootprint.Network : Swift.RawRepresentable {}
